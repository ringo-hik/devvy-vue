<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Devvy 챗봇 Mapper XML -->
<!-- @Refactored: namespace 변경 -->
<mapper namespace="com.example.devvy.mapper.DevvyMapper">

    <!-- 카테고리 목록 조회 -->
    <select id="selectCategories" resultType="com.example.devvy.vo.DevvyVo">
        SELECT
            category_id    AS categoryId,
            category_name  AS categoryName,
            description,
            icon,
            sort_order     AS sortOrder
        FROM devvy_category
        WHERE is_active = 1
        ORDER BY sort_order ASC
    </select>

    <!-- 누락된 카테고리별 컨텍스트 데이터 조회 -->
    <select id="selectContextDataByCategory" parameterType="long" resultType="com.example.devvy.vo.DevvyVo">
        SELECT context_data AS userQuery,
               related_info
        FROM devvy_context
        WHERE category_id = #{categoryId}
          AND is_active = 1
    </select>

    <!-- 채팅 메시지 저장 -->
    <insert id="insertChatMessage" parameterType="com.example.devvy.vo.DevvyVo">
        INSERT INTO devvy_message (
            session_id, user_id, category_id, message_type, user_query, timestamp
        ) VALUES (
            #{sessionId}, #{userId}, #{categoryId}, #{messageType}, #{userQuery}, #{timestamp}
        )
    </insert>

    <!-- 사용자별 채팅 히스토리 조회 (최신순) -->
    <select id="selectChatHistory" parameterType="string" resultType="com.example.devvy.vo.DevvyVo">
        SELECT 
            s.session_id      AS sessionId,
            c.category_name   AS categoryName,
            s.message_count   AS messageCount,
            s.created_at      AS createdAt,
            s.last_message_at AS lastMessageAt,
            (SELECT user_query
             FROM devvy_message m
             WHERE m.session_id = s.session_id AND m.message_type = 'USER'
             ORDER BY m.timestamp ASC
             LIMIT 1)         AS firstMessage
        FROM devvy_session s
        JOIN devvy_category c ON s.category_id = c.category_id
        WHERE s.user_id = #{userId}
        ORDER BY s.last_message_at DESC
    </select>
    
    <!-- 특정 세션의 메시지 목록 조회 (시간순) -->
    <select id="selectSessionMessages" resultType="com.example.devvy.vo.DevvyVo">
        SELECT 
            message_type AS messageType,
            user_query   AS userQuery,
            timestamp
        FROM devvy_message
        WHERE session_id = #{sessionId} AND user_id = #{userId}
        ORDER BY timestamp ASC
    </select>

    <!-- 새로운 채팅 세션 생성 -->
    <insert id="insertChatSession" parameterType="com.example.devvy.vo.DevvyVo">
        INSERT INTO devvy_session (
            session_id, user_id, category_id, message_count, created_at, last_message_at
        ) VALUES (
            #{sessionId}, #{userId}, #{categoryId}, 2, NOW(), NOW()
        )
    </insert>

    <!-- 기존 채팅 세션 정보 업데이트 -->
    <update id="updateChatSession" parameterType="com.example.devvy.vo.DevvyVo">
        UPDATE devvy_session 
        SET 
            last_message_at = NOW(),
            message_count = message_count + 2
        WHERE session_id = #{sessionId}
    </update>

    <!-- 사용자 피드백 저장 -->
    <insert id="insertFeedback" parameterType="com.example.devvy.vo.DevvyVo">
        INSERT INTO devvy_feedback (
            user_id, session_id, rating, comment, feedback_category, created_at
        ) VALUES (
            #{userId}, #{sessionId}, #{rating}, #{comment}, #{feedbackCategory}, #{createdAt}
        )
    </insert>

</mapper>
